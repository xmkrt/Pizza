import java.io.FileNotFoundException;import java.util.ArrayList;import java.util.Arrays;import org.junit.BeforeClass;import org.junit.Test;import de.thb.fim.pizzaPronto.datenobjekte.DessertVO;import de.thb.fim.pizzaPronto.datenobjekte.GerichtVO;import de.thb.fim.pizzaPronto.datenobjekte.PastaVO;import de.thb.fim.pizzaPronto.datenobjekte.PizzaVO;import de.thb.fim.pizzaPronto.datenobjekte.SpeiseKarte;import de.thb.fim.pizzaPronto.logik.io.SpeisekarteImporter;import static org.junit.Assert.*;import java.io.IOException;/** * IO-KLassen werden getestet. *  * Zum Testen werden spezielle Assert-Befehle und die Reflection-API eingesetzt <br> *  * @author Gabriele Schmidt * @version 1.0 8.05.2015 */public class JUnitTestIOSpeiseKarteImporter {	private static SpeiseKarte mySpeisekarte;	private static SpeiseKarte eingeleseneSpeisekarte;		@BeforeClass	public static void setUpBeforeClass()   {		ArrayList<GerichtVO> speisen = new ArrayList<GerichtVO>();		ArrayList<String> zutaten;		DessertVO dessert;		zutaten = new ArrayList<String>(Arrays.asList(new String[] {				"Schinken", "Spinat", "Champignon", "Ei" }));		speisen.add(new PizzaVO(30, "Popeye", zutaten, 7.90f, 1));		speisen.add(new PizzaVO(30, "Popeye", zutaten, 8.90f, 2));				zutaten = new ArrayList<String>(Arrays.asList(new String[] {				"Schinken", "Ananas", "Champignon" }));		speisen.add(new PizzaVO(31, "Hawaii", zutaten, 5.80f, 1));		speisen.add(new PizzaVO(31, "Hawaii", zutaten, 7.40f, 2));				zutaten = new ArrayList<String>(Arrays.asList(new String[] {				"Thunfisch", "Paprika", "Zucchini" }));		speisen.add(new PizzaVO(33, "Tonno", zutaten, 5.80f, 1));		speisen.add(new PizzaVO(33, "Tonno", zutaten, 7.40f, 2));		// hier folgen die weiteren Gerichte		zutaten = new ArrayList<String>(Arrays.asList(new String[] {				"Schinken", "Salami", "Zwiebeln", "Ei" }));		speisen.add(new PizzaVO(34, "Prima", zutaten, 7.00f, 1));		speisen.add(new PizzaVO(34, "Prima", zutaten, 8.90f, 2));		zutaten = new ArrayList<String>(				Arrays.asList(new String[] { "Tomatensauce" }));		speisen.add(new PastaVO(11, "Napoli", zutaten, 5.60f, 4));		speisen.add(new PastaVO(11, "Napoli", zutaten, 5.60f, 5));		speisen.add(new PastaVO(11, "Napoli", zutaten, 5.60f, 6));		zutaten = new ArrayList<String>(				Arrays.asList(new String[] { "Hackfleischsauce" }));		speisen.add(new PastaVO(12, "Bolognese", zutaten, 6.40f, 4));		speisen.add(new PastaVO(12, "Bolognese", zutaten, 6.40f, 5));		speisen.add(new PastaVO(12, "Bolognese", zutaten, 6.40f, 6));				zutaten = new ArrayList<String>(				Arrays.asList(new String[] { "Schinken", "Sahne" }));		speisen.add(new PastaVO(13, "alla Panna", zutaten, 6.40f, 4));		speisen.add(new PastaVO(13, "alla Panna", zutaten, 6.40f, 5));		speisen.add(new PastaVO(13, "alla Panna", zutaten, 6.40f, 6));		zutaten = new ArrayList<String>(				Arrays.asList(new String[] { "Mandeln" }));		dessert = new DessertVO(21, "Hausgemachter Obstsalat", 4.30f);		dessert.setZutaten(zutaten);		speisen.add(dessert);				zutaten = new ArrayList<String>(				Arrays.asList(new String[] { "Sahne" }));		dessert = new DessertVO(22, "Hausgemachte Pannacotta", 5.60f);		dessert.setZutaten(zutaten);		speisen.add(dessert);				zutaten = new ArrayList<String>(				Arrays.asList(new String[] { "Sahne","Kaffee" }));		dessert = new DessertVO(23, "Hausgemachtes Tiramisu", 4.80f);		dessert.setZutaten(zutaten);		speisen.add(dessert);				mySpeisekarte = new SpeiseKarte(speisen);			}	@Test	public void einlesenSpeiseKarte() throws FileNotFoundException, IOException {				SpeisekarteImporter importer;		String datei;				datei = "test/meineSpeisekarte.txt";		importer = new SpeisekarteImporter();				eingeleseneSpeisekarte = importer.leseSpeisekarte(datei);		assertEquals("20Speisen eingelesen", 20, eingeleseneSpeisekarte.getAnzGerichte());				for(int i = 0; i < eingeleseneSpeisekarte.getAnzGerichte(); i++){			assertTrue("Alle Elemente korrekt eingelesen", eingeleseneSpeisekarte.getGericht(i).equals(mySpeisekarte.getGericht(i)));		}	}		}