import java.lang.reflect.Constructor;import java.lang.reflect.Field;import java.lang.reflect.Method;import java.lang.reflect.Modifier;import java.util.ArrayList;import java.util.List;import org.junit.BeforeClass;import org.junit.Test;import de.thb.fim.pizzaPronto.datenobjekte.GerichtArt;import de.thb.fim.pizzaPronto.datenobjekte.Geschlecht;import static org.junit.Assert.*;/** * Die Enum werden getestet. *  * Zum Testen werden spezielle Assert-Befehle und die Reflection-API eingesetzt <br> *  * @author Gabriele Schmidt * @version 1.0 8.05.2015 */public class JUnitTestEnum {	private static Class<Geschlecht> myGeschlechtClass;	private static Class<GerichtArt> myGerichtArtClass;	@BeforeClass	public static void setUpBeforeClass() throws Exception {		myGeschlechtClass = Geschlecht.class;		myGerichtArtClass = GerichtArt.class;	}	@Test	public void GeschlechtIsEnum() {		assertTrue("Geschlecht ist ein Enum", myGeschlechtClass.isEnum());	}	@Test	public void alleKonstantenInGeschlecht() {		Field[] fields = myGeschlechtClass.getDeclaredFields();		assertEquals(				"Geschlecht.M als Konstante",				"public static final de.thb.fim.pizzaPronto.datenobjekte.Geschlecht de.thb.fim.pizzaPronto.datenobjekte.Geschlecht.M",				fields[0].toString());		assertEquals(				"Geschlecht.W als Konstante",				"public static final de.thb.fim.pizzaPronto.datenobjekte.Geschlecht de.thb.fim.pizzaPronto.datenobjekte.Geschlecht.W",				fields[1].toString());		assertEquals(				"Geschlecht.I als Konstante",				"public static final de.thb.fim.pizzaPronto.datenobjekte.Geschlecht de.thb.fim.pizzaPronto.datenobjekte.Geschlecht.I",				fields[2].toString());		assertEquals(				"Geschlecht.U als Konstante",				"public static final de.thb.fim.pizzaPronto.datenobjekte.Geschlecht de.thb.fim.pizzaPronto.datenobjekte.Geschlecht.U",				fields[3].toString());	}	@Test	public void konstruktorInGeschlecht() {		Constructor[] konstruktoren = myGeschlechtClass				.getDeclaredConstructors();		int modifiersKonstruktor = konstruktoren[0].getModifiers();		assertTrue("Konstruktor ist private",				Modifier.isPrivate(modifiersKonstruktor));		assertEquals("Nur ein Konstruktor", 1, konstruktoren.length);	}	@Test	public void methodenInGeschlecht() {		Method[] methoden = myGeschlechtClass.getDeclaredMethods();		assertEquals(				"toString()-Methode",				"public java.lang.String de.thb.fim.pizzaPronto.datenobjekte.Geschlecht.toString()",				methoden[0].toString());		assertEquals(				"toNumber()-Methode",				"public int de.thb.fim.pizzaPronto.datenobjekte.Geschlecht.toNumber()",				methoden[3].toString());	}	@Test	public void attributeInGeschlecht() {		Field[] fields = myGeschlechtClass.getDeclaredFields();		assertEquals(				"Attribut nummer: private final int",				"private final int de.thb.fim.pizzaPronto.datenobjekte.Geschlecht.nummer",				fields[4].toString());	}	@Test	public void GerichtArtIsEnum() {		assertTrue("GerichtArt ist ein Enum", myGerichtArtClass.isEnum());	}	@Test	public void alleKonstantenInGerichtArt() {		Field[] fields = myGerichtArtClass.getDeclaredFields();	//	System.out.println(fields[0]);		assertEquals(				"GerichtArt.PIZZA als Konstante",				"public static final de.thb.fim.pizzaPronto.datenobjekte.GerichtArt de.thb.fim.pizzaPronto.datenobjekte.GerichtArt.PIZZA",				fields[0].toString());		assertEquals(				"GerichtArt.PASTA als Konstante",				"public static final de.thb.fim.pizzaPronto.datenobjekte.GerichtArt de.thb.fim.pizzaPronto.datenobjekte.GerichtArt.PASTA",				fields[1].toString());	}	@Test	public void konstruktorInGerichtArt() {		Constructor[] konstruktoren = myGerichtArtClass.getDeclaredConstructors();		int modifiersKonstruktor = konstruktoren[0].getModifiers();		assertTrue("Konstruktor ist private",				Modifier.isPrivate(modifiersKonstruktor));		assertEquals("Nur ein Konstruktor", 1, konstruktoren.length);	}	@Test	public void attributeInGerichtArt() {		Field[] fields = myGerichtArtClass.getDeclaredFields();	//	System.out.println(fields[2]);		assertEquals(				"Attribut bezeichnung: private final String",				"private final java.lang.String de.thb.fim.pizzaPronto.datenobjekte.GerichtArt.bezeichnung",				fields[2].toString());	}}