import java.io.File;import java.io.FileNotFoundException;import java.lang.reflect.Constructor;import java.lang.reflect.Field;import java.lang.reflect.Method;import java.lang.reflect.Modifier;import java.time.LocalDate;import java.time.LocalDateTime;import java.util.ArrayList;import java.util.List;import org.junit.BeforeClass;import org.junit.Test;import de.thb.fim.pizzaPronto.datenobjekte.Geschlecht;import de.thb.fim.pizzaPronto.datenobjekte.KundeVO;import de.thb.fim.pizzaPronto.datenobjekte.SpeiseKarte;import de.thb.fim.pizzaPronto.datenobjekte.exceptions.KundeKeinGeburtsdatumException;import de.thb.fim.pizzaPronto.datenobjekte.exceptions.KundeZuJungException;import de.thb.fim.pizzaPronto.logik.Bestellung;import de.thb.fim.pizzaPronto.logik.io.Serializer;import static org.junit.Assert.*;/** * IO-KLassen werden getestet. *  * Zum Testen werden spezielle Assert-Befehle und die Reflection-API eingesetzt <br> *  * @author Gabriele Schmidt * @version 1.0 8.05.2015 */public class JUnitTestIOSerializer {	private static Bestellung myBestellung;	private static Bestellung myBestellungDeserialize;	private static KundeVO kunde;		@BeforeClass	public static void setUpBeforeClass() throws KundeKeinGeburtsdatumException, KundeZuJungException   {		kunde = new KundeVO("Mustermann", "Max", "Mustergasse", 7,				Geschlecht.M, LocalDate.of(1990, 1, 1), null);		myBestellung = new Bestellung(LocalDateTime.now().minusHours(9),kunde);						}	@Test	public void de_serializeBestellung() throws FileNotFoundException {		int i;		Serializer seri;		String datei;				datei = "myBestellungDatei.ser";		seri = new Serializer(datei);			    SpeiseKarte sp = new SpeiseKarte();		for (i = 0; i < 3; i++) {			myBestellung.hinzufuegenGericht(sp.getGericht(i));		}		seri.serializeBestellung(myBestellung);		assertTrue("Datei " + datei + " wurde erstellt", new File(datei).exists());				myBestellungDeserialize =  seri.deserializeBestellung();	//	System.out.println(myMessung.equals(myMessungDeserialize));		assertEquals("Deserialized Bestellung equals serialized Bestellung", myBestellung, myBestellungDeserialize);		assertEquals("Kunde richtig deserialisiert", myBestellung				.getKunde().getNachname(), myBestellungDeserialize				.getKunde().getNachname());		seri.closeOutput(); 		seri.closeInput();	}		}